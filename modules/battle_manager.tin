#ACTION {%1 advances on you!$}
{
	#nop {Hook name is rangedEnd	};
	#nop {Hook args: name of thing that advanced on you.};
	#variable {rangedCombat} {0};
	SYNTH_PLAY warningSound;
	#list {hook[rangedEnd]} {size} {i};
	#if {$i > 0}
	{
		#forall {${hook[rangedEnd][]}} {@${hook[rangedEnd][&0]}{%1}}
	}
}
{9}

#ACTION {%1 charges madly into %2, but can't budge {her|him|it}.$}
{
	#list {autorescueList} {size} {i};
	#if {$i > 0}
	{
		#forall {%1;%2}{#list {autorescueList} {find} {&0} {i};#if {$i != 0}{rescue ${autorescueList[$i]}}}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		join %2
	}
}
{9}

#ACTION {%1 diverts {her|his|its} attention to %w.$}
{
	#list {autorescueList} {find} {%2} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	}
}
{9}

#ACTION {%1 flies from your grasp.$}
{
	#regexp {%1} {{.*} {.*}} {wield &2};
	#else
	{
		wield %1
	}
}
{9}

#ACTION {%1 grabs you around the neck. You cannot breathe{!|! \(\d* damage\)}$}
{
	wake
}
{9}

#ACTION {%1 hits %w %*{\.|!}$}
{
	#list {autorescueList} {find} {%2} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]};
		spamset rescue%2
	}
}
{9}

#ACTION {%1 impales %2 in {her|his|its} chest, %4 screams in pain.$}
{
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%1} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %1
			}
		};
		#else
		{
			join %2
		}
	}
}
{9}

#ACTION {%1 panics and attempts to flee!$}
{
	#variable {fleeString} {%1}
}
{9}

#ACTION {%1 picks you up by the neck and throws you out of the room.$}
{
	#nop {Hook name is roomTossed	};
	#nop {Hook args: name of thing that tossed you.};
	#if {&{leader}}
	{
		gt &byTossed!
	};
	#list {hook[roomTossed]} {size} {i};
	#if {$i > 0}
	{
		#forall {${hook[roomTossed][]}} {@${hook[roomTossed][&0]}{%1}}
	}
}
{9}

#ACTION {%1 places something in the back of %2, resulting in a gush of blood!$}
{
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%1} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %1
			}
		};
		#else
		{
			join %2
		}
	}
}
{9}

#ACTION {%1 screams insanely and charges into %2!$}
{
	#list {autorescueList} {size} {i};
	#if {$i > 0}
	{
		#forall {%1;%2}{#list {autorescueList} {find} {&0} {i};#if {$i != 0}{rescue ${autorescueList[$i]}}}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		join %2
	}
}
{9}

#ACTION {%1 strikes a pressure point on %2's neck, causing {her|him|it} to crumple...$}
{
	#list {autorescueList} {size} {i};
	#if {$i > 0}
	{
		#forall {%1;%2}{#list {autorescueList} {find} {&0} {i};#if {$i != 0}{rescue ${autorescueList[$i]}}}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		join %2
	}
}
{9}

#ACTION {%1 trips as {he|it|she} charges into %3!$}
{
	#list {autorescueList} {size} {i};
	#if {$i > 0}
	{
		#forall {%1;%3}{#list {autorescueList} {find} {&0} {i};#if {$i != 0}{rescue ${autorescueList[$i]}}}
	};
	#else
	{
		#list {groupMemberList} {find} {%1} {i}
	};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%3} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %3
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%3} {i};
	#if {$i > 0}
	{
		join %3
	}
}
{9}

#ACTION {^%S heals %w's wounds.$}
{
	#list {autorescueList} {find} {%2} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	}
}
{9}

#ACTION {^%S stops following %w.$}
{
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#list {groupMemberList} {delete} {$i}
	}
}
{9}

#ACTION {^%s%w %s[%S%s%d]%s(%*}
{
	#list {groupMemberList} {find} {%2} {i};
	#if {$i == 0}
	{
		#list {groupMemberList} {add} {%2}
	};
	#regexp {%0} {{.*}Leader{.}} {#if {"%2" != "$MSDP_CHARACTER_NAME"} {#variable {leader} {%2}}}
}
{9}

#ACTION {^%w attempts to backstab %2, but flies right through {her|him|it}.$}
{
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	}
}
{9}

#ACTION {^%w is now a group member %*.$}
{
	#nop {Hook name: groupAdd.};
	#nop {Hook args: person added to group.};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i == 0}
	{
		#list {groupMemberList} {add} {%1}
	};
	#list {hook[groupAdd]} {size} {i};
	#if {$i > 0}
	{
		#forall {${hook[groupAdd][]}} {@${hook[groupAdd][&0]}{%1}}
	}
}
{9}

#ACTION {^%w is {moderately hurt|severely hurt|near death|incapacitated .*|stunned .*|mortally wounded .*}.$}
{
	#list {autohealList} {find} {%1} {i};
	#if {$i != 0}
	{
		#switch {"${MSDP_CLASS}"}
		{
			#case {"Paladin"}
			{
				#forall {moderate;severe;nearDeath;incapacitated;;stunned;morted}{#if {!&{heal.&0}}{#variable {heal.&0} {lay}}}
			};
			#default
			{
				#forall {moderate;severe;nearDeath;incapacitated;stunned;morted}{#if {!&{heal.&0}}{#variable {heal.&0} {heal}}}
			}
		};
		#switch {"%2"}
		{
			#case {"moderately hurt"}
			{
				${heal.moderate} %1
			};
			#case {"severely hurt"}
			{
				${heal.severe} %1
			};
			#case {"near death"}
			{
				${heal.nearDeath} %1
			};
			#case {"incapacitated%*"}
			{
				${heal.incapacitated} %1
			};
			#case {"stunned%*"}
			{
				${heal.stunned} %1
			};
			#case {"mortally wounded%*"}
			{
				${heal.morted} %1
			}
		}
	};
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		Rescue %1
	}
}
{9}

#ACTION {^%w tries to backstab %2 but nearly cuts {her|his|its} own finger!$}
{
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	};
	#list {groupMemberList} {find} {%1} {i};
	#if {$i > 0}
	{
		#if {&{character[chainAttack]}}
		{
			#regexp {%2} {{.*} {.*}} {${character[chainAttack]} &2};
			#else
			{
				${character[chainAttack]} %2
			}
		};
		#else
		{
			join %1
		}
	};
	#list {groupMemberList} {find} {%2} {i};
	#if {$i > 0}
	{
		#if {${auto.charge} && !${MSDP_OPPONENT_NUMBER} && $MSDP_STAMINA > 300}
		{
			charge %1
		};
		#else
		{
			join %2
		}
	}
}
{9}

#ACTION {^Looks like its not quite %1's bedtime.$}
{
	#list {autorescueList} {size} {i};
	#if {$i > 0}
	{
		#forall {${autorescueList[]}}{rescue ${autorescueList[&0]}}
	}
}
{9}

#ACTION {^Ok, you will try to fight from ranged combat distance.$}
{
	#nop {Hook name is rangedStart	};
	#nop {Hook args: none.};
	#variable {rangedCombat} {1};
	#list {hook[rangedStart]} {size} {i};
	#if {$i > 0}
	{
		#forall {${hook[rangedStart][]}} {@${hook[rangedStart][&0]}{}}
	}
}
{9}

#ACTION {^SEEK SHELTER AT ONCE!%s%w has begun to sing.$}
{
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	}
}
{9}

#ACTION {^Saving %w.$}
{
	#if {${spam.save}}
	{
		#line {gag}
	}
}
{9}

#ACTION {^You call upon the forces of nature to heal yourself.$}
{
	spamset recall 20
}
{9}

#ACTION {^You join the fight with %w.$}
{
	#list {autorescueList} {find} {%1} {i};
	#if {$i != 0}
	{
		rescue ${autorescueList[$i]}
	}
}
{9}

#ACTION {^You receive your reward for the kill, %1}
{
	#nop {Hook name is mobDeath.};
	#nop {Hook args all text for rewoard for the kill.};
	#if {&{battle_manager[tankName]}}
	{
		#delay {.5} {#if {$MSDP_OPPONENT_NUMBER == 0} {reform ${battle_manager[tankName]} non;march ${battle_manager[tankName]}}}
	};
	#if {"${onDeath}" != ""}
	{
		#forall {${onDeath[]}}{${onDeath[&0]}};
		#list {onDeath} {clear}
	};
	#list {hook[mobDeath]} {size} {i};
	#if {$i > 0}
	{
		#forall {${hook[mobDeath][]}} {@${hook[mobDeath][&0]}{%1}}
	};
	#if {${auto[vdrain]} == 1 && @percent{MSDP_HEALTH} < 50}
	{
		vdrain corpse
	};
	#elseif {${auto[edrain]} == 1 && @percent{MSDP_MANA} <  50}
	{
		edrain corpse
	}
}
{9}

#ACTION {^You take %w's position in the formation.$}
{
	rescue %1
}
{9}

#ACTION {^You try but are unable to head off {her|his|its} opponent.$}
{
	#forall {${autorescueList[]}}{rescue ${autorescueList[&0]}}
}
{9}

#ACTION {^You will not try to fight from ranged combat distance.  You will still need to ADVANCE on opponents who are attempting to use ranged combat in order to hit them.$}
{
	#variable {rangedCombat} {0}
}
{9}

#ACTION {^You {now follow|stop following} %w.$}
{
	#if {"%1" == "stop following"}
	{
		#if {"%2" == "$leader"}
		{
			#list {groupMemberList} {clear};
			#unvariable {leader}
		}
	};
	#else
	{
		#variable {leader} {%2}
	}
}
{9}

#ALIAS {^auto{heal|rescue} {add|remove} {all|group}$}
{
	#list {auto%1List} {clear};
	#if {"%2" == "remove"}
	{
		#echo {You are no longer %1ing anyone.}
	};
	#else
	{
		#nop {Refresh the groupMemberList variable};
		#list {groupMemberList} {clear};
		group;
		#nop {The actual list management takes place in a POPULATE_whatever_LIST alias called with localecho so we know all the group members have been added.};
		localecho silent_do POPULATE_%1_LIST
	}
}
{8}

#ALIAS {^POPULATE_%w_LIST$}
{
	#list {groupMemberList} {size} {i};
	#if {$i > 0}
	{
		#forall {${groupMemberList[]}}{#if {"${groupMemberList[&0]}" != "${MSDP_CHARACTER_NAME}"}{auto%1 add ${groupMemberList[&0]}}}
	};
	auto%1
}
{9}

#ALIAS {^auto{heal|rescue} %s{add|remove} %s%w$}
{
	#format {battle_manager.tmp} {%n} {%5};
	#list {auto%1List} {find} {${battle_manager.tmp}} {i};
	#if {"%3" == "remove"}
	{
		#if {$i == 0}
		{
			#echo {You are not current automatically %1ing ${battle_manager.tmp}\.}
		};
		#else
		{
			#list {auto%1List} {delete} {$i};
			#echo {You are no longer automatically %1ing ${battle_manager.tmp}\.}
		}
	};
	#else
	{
		#if {$i != 0}
		{
			#echo {You are already automatically %1ing ${battle_manager.tmp}\.}
		};
		#else
		{
			#list {auto%1List} {add} {${battle_manager.tmp}};
			#echo {You are now automatically %1ing ${battle_manager.tmp}\.}
		}
	}
}
{9}

#ALIAS {^auto{heal|rescue}$}
{
	#echo {You are currently automatically %1ing:};
	#list {auto%1List} {size} {i};
	#if {$i > 0}
	{
		#forall {${auto%1List[]}}{#echo {${auto%1List[&0]}}}
	};
	#if {&{autoHealSelf} && "%0" == "autoheal"}
	{
		#echo {Yourself with: ${autoHealSelf} at ${autoHealSelfPercent} percent.}
	}
}
{9}

#ALIAS {^flee}
{
	#if {$MSDP_OPPONENT_NUMBER > 0}
	{
		#send {%0}
	}
}
{9}

#ALIAS {^he{a|al} %sall$}
{
	#list {autohealList} {size} {i};
	#if {$i == 0}
	{
		#echo {No one to heal}
	};
	#else
	{
		#forall {${autohealList[]}}{he%1 ${autohealList[&0]}}
	}
}
{9}

#ALIAS {^noauto{heal|rescue}$}
{
	#list {auto%1List} {clear};
	#echo {You are no longer %1ing anyone.}
}
{9}

#ALIAS {^res{c|cu|cue} %sall$}
{
	#list {autorescueList} {size} {i};
	#if {$i == 0}
	{
		#echo {No one to rescue}
	};
	#else
	{
		#forall {${autorescueList[]}}{res%1 ${autorescueList[&0]}}
	}
}
{9}

#ALIAS {^{gl|gla|glan|glanc|glance} %s{all|group}$}
{
	#list {groupMemberList} {size} {i};
	#if {$i > 0}
	{
		#forall {${groupMemberList[]}} {#if {"${groupMemberList[&0]}" != "$MSDP_CHARACTER_NAME"}{ glance ${groupMemberList[&0]}}}
	};
	#else
	{
		#echo {No one to glance at.}
	}
}
{9}

#ALIAS {^{noc|c}hainattack$}
{
	#if {"%0" == "nochainattack"}
	{
		#unvariable {character[chainAttack]};
		#echo {Chain attack cleared.}
	};
	#else
	{
		#if {&{character[chainAttack]}}
		{
			#echo {You are currently trying to join battles using ${character[chainAttack]}\.}
		};
		#else
		{
			#echo {You have no chain attack set.}
		}
	}
}
{9}

#ALIAS {^{notank|tank|tank \w+}$}
{
	#if {"%0" == "notank"}
	{
		#unvariable {battle_manager.tankName};
		#echo {Tank cleared.}
	};
	#else
	{
		#regexp {%0} {{.*} {.*}} {#variable {battle_manager.tankName} {&2}};
		#else
		{
			#variable {battle_manager.tankName} {self}
		};
		#echo {tank set to ${battle_manager.tankName}\.}
	}
}
{9}

#ALIAS {chainattack %1}
{
	#variable {character[chainAttack]} {%1};
	#echo {You will now try to join battle using %1.}
}
{9}

#EVENT {VARIABLE UPDATE MSDP_OPPONENT_NAME}
{
	#if {"%1" != ""}
	{
		#variable {OLD_MSDP_OPPONENT_NAME} {%1};
		#if {${auto[join]}}
		{
			order followers join $MSDP_CHARACTER_NAME
		}
	}
}

#EVENT {VARIABLE UPDATE MSDP_OPPONENT_NUMBER}
{
	#if {${auto[range]} && !${rangedCombat} && %1 == 0}
	{
		range
	}
}
