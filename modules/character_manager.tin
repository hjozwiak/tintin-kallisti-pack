#ALIAS {^CSAVE$}
{
	#if {"$MSDP_CHARACTER_NAME" != ""}
	{
		#variable {historyPath} {${HOME}/${MSDP_CHARACTER_NAME}\.history};
		#replace {historyPath} {\\} {};
		#history {write} {$historyPath};
		#unvariable {historyPath};
		#class {${MSDP_CHARACTER_NAME}} {write} {${HOME}/${MSDP_CHARACTER_NAME}};
		#class {${MSDP_CHARACTER_NAME}} {open}
	}
}
{9}

#ALIAS {^bot{kill|load} %S$}
{
	#nop {character bot path};
	#variable {modpath} {${HOME}/${MSDP_CHARACTER_NAME}\.bots};
	#replace {modpath} {\\} {};
	#nop {Kill, load, or reload a specified bot.};
	#if {"%1" == "kill"}
	{
		#if {&{bot.%1}}
		{
			${bot.%1}
		};
		#class {bot_%2} {kill};
		#unvariable {mobDeath.bot%*};
		#unvariable {trackEnd.bot%*};
		#class {$MSDP_CHARACTER_NAME} {open};
		#showme {bot %2 has been killed.}
	};
	#if {"%1" == "load"}
	{
		#showme {Loading bot %2.tin};
		#class {$MSDP_CHARACTER_NAME} {close};
		#class {bot_%2} {read} {$modpath/%2.tin};
		#if {&{bot.%1}}
		{
			${bot.%1}
		}
	};
	#unvariable {modpath}
}
{9}

#ALIAS {^cmod{kill|load|reload} %S$}
{
	CSAVE;
	#nop {character module path};
	#variable {modpath} {${HOME}/${MSDP_CHARACTER_NAME}\.modules};
	#replace {modpath} {\\} {};
	#nop {reload all modules};
	#if {"%0" == "cmodreload all"}
	{
		#script {for module in $modpath/*.tin ; do echo "#class {$(basename "$module" .tin)} {kill};#class {character_$(basename "$module" .tin)} {read} {$module}";done};
		#echo {All character modules reloaded}
	};
	#else
	{
		#nop {Kill, load, or reload a specified module.};
		#if {"%1" == "{kill|reload}"}
		{
			#class {character_%2} {kill};
			#showme {Character module %2 has been killed.}
		};
		#if {"%1" == "{load|reload}"}
		{
			#showme {Loading character module %2.tin};
			#class {character_%2} {read} {$modpath/%2.tin};
			#class {$MSDP_CHARACTER_NAME} {open}
		}
	};
	#unvariable {modpath}
}
{9}

#ALIAS {^container %s%w$}
{
	#variable {character.container} {%2};
	#echo {Your container is now %2.}
}
{9}

#ALIAS {^whoami$}
{
	#echo {You are $MSDP_CHARACTER_NAME, the level $MSDP_LEVEL $MSDP_CLASS\.};
	#if {&{character.lastDeath}}
	{
		#echo {${character.lastDeath}}
	}
}
{9}

#ALIAS {^{audioprompt|beeps|noaudioprompt|nobeeps}$}
{
	#switch {"%0"}
	{
		#case {"audioprompt"}
		{
			#variable {character.audioprompt} {true};
			#echo {Audio prompt enabled.}
		};
		#case {"beeps"}
		{
			#variable {character.beeps} {true};
			#echo {Opponent condition beeps enabled.}
		};
		#case {"noaudioprompt"}
		{
			#variable {character.audioprompt} {false};
			#echo {Audio prompt disabled.}
		};
		#case {"nobeeps"}
		{
			#variable {character.beeps} {false};
			#echo {Opponent condition beeps disabled.}
		}
	}
}
{9}

#EVENT {VARIABLE UPDATE MSDP_CHARACTER_NAME}
{
	#if {"${OLD_MSDP_CHARACTER_NAME}" != "" && "$OLD_MSDP_CHARACTER_NAME" != "%1"}
	{
		#variable {historyPath} {${HOME}/${OLD_MSDP_CHARACTER_NAME}\.history};
		#replace {historyPath} {\\} {};
		#history {write} {$historyPath};
		#unvariable {historyPath};
		#class {${OLD_MSDP_CHARACTER_NAME}} {write} {${HOME}/${OLD_MSDP_CHARACTER_NAME}};
		#class {${OLD_MSDP_CHARACTER_NAME}} {kill};
		#nop {unload any old character classes};
		#variable {modpath} {${HOME}/${OLD_MSDP_CHARACTER_NAME}\.modules};
		#replace {modpath} {\\} {};
		#script {for module in $modpath/*.tin ; do echo "#class {character_$(basename "$module" .tin)} {kill}";done}
	};
	#nop {Make sure the character file exists so there's no error on read.};
	#system {if ! [[ -f "$HOME/%1" ]]; then if [[ "%1" != "" ]]; then mkdir -p "$HOME/%1.modules";cp modules/config.txt "$HOME/%1.modules/config.tin";echo "#nop" > "$HOME/%1";fi;fi};
	#variable {OLD_MSDP_CHARACTER_NAME} {%1};
	#history {read} {${HOME}/%1.history};
	#class {%1} {read} {${HOME}/%1};
	#nop {Load personal modules.};
	#script {if [[ -d "$HOME/%1.modules" ]]; then for module in $HOME/%1.modules/*.tin ; do echo "#class {character_$(basename "$module" .tin)} {read} {$module}";done;fi};
	#if {"${cspam}" == "true"}
	{
		#class {applied_spam_settings} {read} {modules/spam.rules};
		#echo {Client side spam filters applied.}
	};
	#class {%1} {open}
}

#VARIABLE         {OLD_MSDP}  {}
