#ALIAS {^HEALTH_EVENT {-?\d+}$}
{
     #if {!&{character[audioprompt]}}
     {
          #variable {character[audioprompt]} {1}
     };
     #math {audioprompt[health]} {(%1 / $MSDP_HEALTH_MAX) *100.0};
     #if {${audioprompt[health]} < 100}
     {
          #format {audioprompt[health]} {%d} {${audioprompt[health]} - ${audioprompt[health]} % 10};
          #if {${audioprompt[health]} != ${audioprompt[oldHealth]} && ${character[audioprompt]} && ${MSP[SOUND]} }
          {
               #if {&{health${audioprompt[health]}}}
               {
                    SYNTH_PLAY health${audioprompt[health]};
                    #variable {audioprompt[oldHealth]} {${audioprompt[health]}}
               }
          }
     };
     #nop {Use the autorecall command if hp is below the specified %};
     #if {!&{auto[recallPercent]}}
     {
          #variable {auto[recallPercent]} {20};
          CSAVE
     };
     #if {(%1 / $MSDP_HEALTH_MAX) * 100.0 <= ${auto[recallPercent]} && $MSDP_OPPONENT_NUMBER > 0}
     {
          #if {!${spam[recall]}}
          {
               #if {&{auto[recall]}}
               {
                    #if {!${spam[breakout]}}
                    {
                         breakout;
                         spamset breakout 10
                    };
                    ${auto[recall]};
                    spamset recall
               }
          }
     };
     #nop {Use the autoheal self command if hp is below the specified %};
     #if {!&{autoHealSelfPercent}}
     {
          #variable {autoHealSelfPercent} {50};
          CSAVE
     };
     #if {(%1 / $MSDP_HEALTH_MAX) *100.0 <= $autoHealSelfPercent}
     {
          #if {&{autoHealSelf} && !${spam[healSelf]}}
          {
               spamset healSelf 2;
               ${autoHealSelf}
          }
     };
     #local {hp} {};
     #math {hp} {(%1 / $MSDP_HEALTH_MAX) * 100.00};
     #format {hp} {%d} {$hp};
     @do_hook{hpPercent;$hp}
}
{9}

#ALIAS {^MANA_EVENT {-?\d+}$}
{
     #if {!&{character[audioprompt]}}
     {
          #variable {character[audioprompt]} {1}
     };
     #math {audioprompt[mana]} {(%1 / $MSDP_MANA_MAX) *100.0};
     #if {${audioprompt[mana]} < 100}
     {
          #format {audioprompt[mana]} {%d} {${audioprompt[mana]} - ${audioprompt[mana]} % 10};
          #if {${audioprompt[mana]} != ${audioprompt[oldMana]} && ${character[audioprompt]} && ${MSP[SOUND]} }
          {
               #if {&{mana${audioprompt[mana]}}}
               {
                    SYNTH_PLAY mana${audioprompt[mana]};
                    #variable {audioprompt[oldMana]} {${audioprompt[mana]}}
               }
          }
     };
     #local {mana} {};
     #math {mana} {(%1 / $MSDP_MANA_MAX) * 100.00};
     #format {mana} {%d} {$mana};
     @do_hook{manaPercent;$mana}
}
{9}

#ALIAS {^STAMINA_EVENT {-?\d+}$}
{
     #if {!&{character[audioprompt]}}
     {
          #variable {character[audioprompt]} {1}
     };
     #math {audioprompt[stamina]} {(%1 / $MSDP_STAMINA_MAX) *100.0};
     #if {${audioprompt[stamina]} < 100}
     {
          #format {audioprompt[stamina]} {%d} {${audioprompt[stamina]} - ${audioprompt[stamina]} % 10};
          #if {${audioprompt[stamina]} != ${audioprompt[oldStamina]} && ${character[audioprompt]} && ${MSP[SOUND]} }
          {
               #if {&{movement${audioprompt[stamina]}}}
               {
                    SYNTH_PLAY movement${audioprompt[stamina]};
                    #variable {audioprompt[oldStamina]} {${audioprompt[stamina]}}
               }
          }
     };
     #if {!&{auto[refreshPercent]}}
     {
          #variable {auto[refreshPercent]} {50};
          CSAVE
     };
     #if {(%1 / $MSDP_STAMINA_MAX) * 100.0 <= ${auto[refreshPercent]}}
     {
          #if {!${spam[refreshSelf]}}
          {
               #if {&{auto[refresh]}}
               {
                    spamset refreshSelf 2;
                    ${auto[refresh]}
               }
          }
     };
     #local {stamina} {};
     #math {stamina} {(%1 / $MSDP_STAMINA_MAX) * 100.00};
     #format {stamina} {%d} {$stamina};
     @do_hook{staminaPercent;$stamina}
}
{9}



#EVENT {VARIABLE UPDATE MSDP_HEALTH}
{
     #nop {hook name: hpPercent};
     #nop {hook args: The percent of hp you currently have.};
     #if {{%1} != {} && &{MSDP_CHARACTER_NAME} && {${MSDP_CHARACTER_NAME}} != {} && !$copying}
     {
          #line oneshot #ticker {health} {HEALTH_EVENT %1} {0.25}
     }
}

#EVENT {VARIABLE UPDATE MSDP_MANA}
{
     #nop {hook name: manaPercent};
     #nop {hook args: The percent of mana you currently have.};
     #if {{%1} != {} && &{MSDP_CHARACTER_NAME} && {${MSDP_CHARACTER_NAME}} != {} && !$copying}
     {
          #line oneshot #ticker {mana} {MANA_EVENT %1} {0.25}
     }
}

#EVENT {VARIABLE UPDATE MSDP_OPPONENT_HEALTH}
{
     #if {{%1} != {} && &{MSDP_CHARACTER_NAME} && {${MSDP_CHARACTER_NAME}} != {} && !$copying}
     {
          @do_hook{opponentHealth;%1};
          #if {!&{character[beeps]}}
          {
               #variable {character[beeps]} {1}
          };
          #if {%1 != 0 && ${character[beeps]} && ${MSP[SOUND]}}
          {
               #local {enemyConditionTone} {};
               #math {enemyConditionTone} {%1 * 10 + 200};
               #system {play -q -V0 -n synth 0.06 tri $enemyConditionTone fade 0.01 0.09 gain ${MSP[VOLUME]} &> /dev/null&}
          }
     }
}

#EVENT {VARIABLE UPDATE MSDP_STAMINA}
{
     #nop {hook name: staminaPercent};
     #nop {hook args: The percent of stamina you currently have.};
     #if {{%1} != {} && &{MSDP_CHARACTER_NAME} && {${MSDP_CHARACTER_NAME}} != {} && !$copying}
     {
          #line oneshot #ticker {stamina} {STAMINA_EVENT %1} {0.25}
     }
}



#VARIABLE         {audioprompt}  {{oldHealth}{0}{oldMana}{0}{oldStamina}{0}}

