#ACTION {^Titles longer than 30 characters may not display completely.$}
{
     #if {${auto[title]} && $settingTitle}
     {
          #line {gag};
          #variable {settingTitle} {0}
     }
}
{9}

#ACTION {^Your title is now <%1>.$}
{
     #if {{%1} == {${music[newAutoTitleString]}} && $settingTitle}
     {
          #line {gag};
          #variable {settingTitle} {0}
     }
}
{9}


#ALIAS {^Get_Music_Message_String$}
{
     #switch {{${music[player]}}}
     {
          #nop {Variable order artist, title, and album.};
          #case {{audacious}}
          {
               #script {i} {audtool -Q --current-song-tuple-data artist};
               #format {msg[1]} {%p} {${i[1]}};
               #script {i} {audtool --current-song-tuple-data title};
               #format {msg[2]} {%p} {${i[1]}};
               #script {i} {audtool --current-song-tuple-data album};
               #format {msg[3]} {%p} {${i[1]}}
          };
          #case {{moc}}
          {
               #script {i} {mocp -Q %artist};
               #format {msg[1]} {%p} {${i[1]}};
               #script {i} {mocp -Q %title};
               #format {msg[2]} {%p} {${i[1]}};
               #script {i} {mocp -Q %album};
               #format {msg[3]} {%p} {${i[1]}}
          };
          #case {{m{opidy|pd}}}
          {
               #script {i} {mpc -f %artist% current};
               #format {msg[1]} {%p} {${i[1]}};
               #script {i} {mpc -f %title% current};
               #format {msg[2]} {%p} {${i[1]}};
               #script {i} {mpc -f %album% current};
               #format {msg[3]} {%p} {${i[1]}}
          };
          #case {{pianobar}}
          {
               #script {i} {cut -f 1 -d '\' "$HOME/../pianobar/nowplaying" 2> /dev/null};
               #format {msg[1]} {%p} {${i[1]}};
               #script {i} {cut -f 2 -d '\' "$HOME/../pianobar/nowplaying" 2> /dev/null};
               #format {msg[2]} {%p} {${i[1]}};
               #script {i} {cut -f 3 -d '\' "$HOME/../pianobar/nowplaying" 2> /dev/null};
               #variable {msg[3]} {%p} {${i[1]}}
          };
          #case {{xmms2}}
          {
               #script {i} {xmms2 info | grep artist | cut -d '=' -f2- | sed -e 's/^ *//' -e 's/ *$//'};
               #variable {msg[1]} {${i[1]}};
               #script {i} {xmms2 info | grep title | cut -d '=' -f2- | sed -e 's/^ *//' -e 's/ *$//'};
               #variable {msg[2]} {${i[1]}};
               #script {i} {xmms2 info | grep album | cut -d '=' -f2- | sed -e 's/^ *//' -e 's/ *$//'};
               #variable {msg[3]} {${i[1]}}
          };
          #case {{cmus}}
          {
               #script {i} {cmus-remote -Q | sed -n 's/^tag artist //p'};
               #format {msg[1]} {%p} {${i[1]}};
               #script {i} {cmus-remote -Q | sed -n 's/^tag title //p'};
               #format {msg[2]} {%p} {${i[1]}};
               #script {i} {cmus-remote -Q | sed -n 's/^tag album //p'};
               #format {msg[3]} {%p} {${i[1]}}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.};
               #variable {msg} {{1}{nobody}{2}{nothing}{3}{}}
          }
     };
     #variable {music[newAutoTitleString]} {${msg[1]} - ${msg[2]}};
     #replace {music[newAutoTitleString]} {;} { - };
     #replace {music[newAutoTitleString]} {รถ} {o};
     #variable {msg} {"${msg[2]}" by "${msg[1]}" from "${msg[3]}"};
     #replace {msg} {;} { - };
     #replace {msg} {รถ} {o};
     #replace {msg} {from ""} {}
}
{9}

#ALIAS {^SET_AUTOTITLE$}
{
     #if {${auto[title]}}
     {
          Get_Music_Message_String;
          #if {{${music[newAutoTitleString]}} != {${music[oldAutoTitleString]}}}
          {
               #variable {music[oldAutoTitleString]} {${music[newAutoTitleString]}};
               #variable {settingTitle} {1};
               title ${music[newAutoTitleString]}
          }
     }
}
{9}

#ALIAS {^musiclinks %s%S %s%S$}
{
     #variable {music[links][apiUrl]} {%2/yourls-api.php};
     #variable {music[links][apiKey]} {%4};
     NOTIFY music links enabled using ${music[links][apiUrl]}.;
     CSAVE
}
{9}

#ALIAS {^musicplayer %s{audacious|cmus|moc|mopidy|mpc|mpd|pianobar|xmms2}$}
{
     #if {{%2} == {mpc}}
     {
          #variable {music[player]} {mpd}
     };
     #else
     {
          #variable {music[player]} {%2}
     };
     NOTIFY music player set to ${music[player]}.;
     CSAVE
}
{9}

#ALIAS {^m{p|po|pos|post} %2}
{
     Get_Music_Message_String;
     #if {!&{music[links][apiKey]}}
     {
          %2 Now playing: $msg via ${music[player]}.
     };
     #else
     {
          #variable {music[links][longUrl]} {https://www.youtube.com/results?search_query=${music[newAutoTitleString]}};
          #replace {music[links][longUrl]} { } {+};
          #replace {music[links][longUrl]} {&} {%%26};
          #script {i} {curl --connect-timeout 10 -s --data "signature=${music[links][apiKey]}" --data "action=shorturl" --data "format=text" --data-urlencode "url=${music[links][longUrl]}" ${music[links][apiUrl]}};
          #variable {music[links][shortUrl]} {${i[1]}};
          %2 Now playing: $msg via ${music[player]}. ${music[links][shortUrl]}
     }
}
{9}

#ALIAS {^{auto|noauto}title$}
{
     #if {{%0} == {autotitle}}
     {
          NOTIFY Your title will automatically change to currently playing song.;
          #variable {auto[title]} {1}
     };
     #else
     {
          NOTIFY Your title will no longer be automatically set.;
          #variable {auto[title]} {0}
     }
}
{9}

#ALIAS {^{musicc|musicch|musiccha|musicchan|musicchann|musicchanne|musicchannel} %s%S$}
{
     #variable {music[channel]} {%3};
     NOTIFY Music channel set to %3.;
     CSAVE
}
{9}

#ALIAS {^{nom|m}usiclinks$}
{
     #if {{%0} == {musiclinks}}
     {
          #variable {music[links][apiUrl]} {https://1u.rs/yourls-api.php};
          #variable {music[links][apiKey]} {b0dda9c182};
          NOTIFY music links enabled using ${music[links][apiUrl]}.
     };
     #else
     {
          #unvariable {music[links]};
          NOTIFY Music links disabled.
     };
     CSAVE
}
{9}

#ALIAS {mp{l|ly|lyr|lyri|lyric|lyrics} %2}
{
     Get_Music_Message_String;
     #script {scripts/lyrics.sh '%2' "${music[newAutoTitleString]}"}
}
{9}


#MACRO {\eB}
{
     #nop {Music player next};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --playlist-advance}
          };
          #case {{moc}}
          {
               #system {mocp -f}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q next}
          };
          #case {{pianobar}}
          {
               #system {echo -n 'n' > ~/.config/pianobar/ctl}
          };
          #case {{xmms2}}
          {
               #system {xmms2 next}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -n}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     };
     #nop {Currently playing track};
     Get_Music_Message_String;
     NOTIFY $msg.
}

#MACRO {\eC}
{
     #nop {Music player pause};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --playback-pause}
          };
          #case {{moc}}
          {
               #system {mocp -G}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q pause}
          };
          #case {{pianobar}}
          {
               #system {echo -n 'p' > ~/.config/pianobar/ctl}
          };
          #case {{xmms2}}
          {
               #system {xmms2 toggle}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -u}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     }
}

#MACRO {\eM}
{
     #if {!&{music[channel]}}
     {
          #variable {music[channel]} {music}
     };
     mpost ${music[channel]}
}

#MACRO {\eR}
{
     #nop {Music player repeat.};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --playlist-repeat-toggle&&echo "Repeat $(audtool --playlist-repeat-status)."}
          };
          #case {{moc}}
          {
               #system {mocp -O Repeat=yes}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc repeat | grep repeat: | tr -s " " | cut -d " " -f3- | cut -d " " -f-2}
          };
          #case {{xmms2}}
          {
               #system {xmms2 repeat}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -R};
               #script {echo "#showme {Cmus $(cmus-remote -Q | grep 'repeat ' | sed 's/true/on/g' | sed 's/false/off/g' | sed 's/set //').}"}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     }
}

#MACRO {\eS}
{
     #nop {Music player randomize tracks.};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --playlist-shuffle-toggle&&echo "Shuffle $(audtool --playlist-shuffle-status)."}
          };
          #case {{moc}}
          {
               #system {mocp -O Shuffle=yes}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc random | grep random: | tr -s " " | cut -d " " -f5- | cut -d " " -f-2}
          };
          #case {{xmms2}}
          {
               #system {xmms2 playlist shuffle;if [ $? -eq 0 ] ; then echo "Playlist shuffled.";fi}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -S};
               #script {echo "#showme {Cmus $(cmus-remote -Q | grep 'shuffle' | sed 's/true/on/g' | sed 's/false/off/g' | sed 's/set //').}"}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     }
}

#MACRO {\eU}
{
     #nop {Currently playing track};
     Get_Music_Message_String;
     NOTIFY $msg.
}

#MACRO {\eV}
{
     #nop {Music player stop.};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --playback-stop}
          };
          #case {{moc}}
          {
               #system {mocp -s}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q stop}
          };
          #case {{pianobar}}
          {
               #system {echo -n 'S' > ~/.config/pianobar/ctl}
          };
          #case {{xmms2}}
          {
               #system {xmms2 stop}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -s}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     }
}

#MACRO {\eX}
{
     #nop {Music player play.};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {if ! ps -C audacious &> /dev/null ; then audacious -Hp &> /dev/null&fi;audtool --playback-play}
          };
          #case {{moc}}
          {
               #system {mocp -p}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q play}
          };
          #case {{pianobar}}
          {
               #system {echo -n 'P' > ~/.config/pianobar/ctl}
          };
          #case {{xmms2}}
          {
               #system {xmms2 play}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -p}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     };
     #nop {Currently playing track};
     Get_Music_Message_String;
     NOTIFY $msg.
}

#MACRO {\eZ}
{
     #nop {Music player previous track.};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --playlist-reverse}
          };
          #case {{moc}}
          {
               #system {mocp -r}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q prev}
          };
          #case {{xmms2}}
          {
               #system {xmms2 prev}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -r}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     };
     #nop {Currently playing track};
     Get_Music_Message_String;
     NOTIFY $msg.
}

#MACRO {\e_}
{
     #nop {Music player volume down.};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --set-volume $(($(audtool --get-volume) - 10))}
          };
          #case {{moc}}
          {
               #system {mocp -v -5}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q volume -5}
          };
          #case {{pianobar}}
          {
               #system {echo -n '(' > ~/.config/pianobar/ctl}
          };
          #case {{xmms2}}
          {
               #script {i} {xmms2 server config equalizer.preamp | tr -Cd "[:digit:]-"};
               #math {i} {${i[1]} - 1};
               #system {xmms2 server config equalizer.preamp $i}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -v -5%}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     }
}

#MACRO {\e+}
{
     #nop {Increase music player volume};
     #switch {{${music[player]}}}
     {
          #case {{audacious}}
          {
               #system {audtool --set-volume $(($(audtool --get-volume) + 10))}
          };
          #case {{moc}}
          {
               #system {mocp -v +5}
          };
          #case {{{mpd|mopidy}}}
          {
               #system {mpc -q volume +5}
          };
          #case {{pianobar}}
          {
               #system {echo -n ')' > ~/.config/pianobar/ctl}
          };
          #case {{xmms2}}
          {
               #script {i} {xmms2 server config equalizer.preamp | tr -Cd "[:digit:]-"};
               #math {i} {${i[1]} + 1};
               #system {xmms2 server config equalizer.preamp $i}
          };
          #case {{cmus}}
          {
               #system {cmus-remote -v +5%}
          };
          #default
          {
               #showme {No default music player set. Try musicplayer name.}
          }
     }
}


#TICKER           {autotitle}  {SET_AUTOTITLE}  {30}

#VARIABLE         {msg}  {}
#VARIABLE         {settingTitle}  {0}

