#ACTION {^Titles longer than 30 characters may not display completely.$}
{
    #if {${auto[title]} && $settingTitle}
    {
        #line {gag};
        #variable {settingTitle} {0}
    }
}
{9}

#ACTION {^Your title is now <%1>.$}
{
    #if {{%1} == {${music[newAutoTitleString]}} && $settingTitle}
    {
        #line {gag};
        #variable {settingTitle} {0}
    }
}
{9}


#ALIAS {^Get_Music_Message_String$}
{
    #script {i} {playerctl -p %any,chromium metadata -f '{{artist}} - {{title}}'};
    #variable {music[newAutoTitleString]} {${i[1]}};
    #replace {music[newAutoTitleString]} {;} { - };
    #replace {music[newAutoTitleString]} {รถ} {o};
    #script {i} {playerctl -p %any,chromium metadata -f '"{{title}}" by "{{artist}}" from "{{album}}"'};
    #variable {msg} {${i[1]}};
    #replace {msg} {;} { - };
    #replace {msg} {รถ} {o};
    #replace {msg} {by ""} {};
    #replace {msg} {from ""} {}
}
{9}

#ALIAS {^SET_AUTOTITLE$}
{
    #if {${auto[title]}}
    {
        Get_Music_Message_String;
        #if {{${music[newAutoTitleString]}} != {${music[oldAutoTitleString]}}}
        {
            #variable {music[oldAutoTitleString]} {${music[newAutoTitleString]}};
            #variable {settingTitle} {1};
            title ${music[newAutoTitleString]}
        }
    }
}
{9}

#ALIAS {^musiclinks %s%S %s%S$}
{
    #variable {music[links][apiUrl]} {%2/yourls-api.php};
    #variable {music[links][apiKey]} {%4};
    NOTIFY music links enabled using ${music[links][apiUrl]}.;
    CSAVE
}
{9}

#ALIAS {^m{p|po|pos|post} %2}
{
    #if {@check_music_player{} == 1}
    {
        #return #nop
    };
    Get_Music_Message_String;
    #script {i} {playerctl -p %any,chromium metadata -f '{{playerName}}'};
    #if {!&{music[links][apiKey]}}
    {
        %2 Now playing: $msg via ${i[1]}.
    };
    #else
    {
        #variable {music[links][longUrl]} {https://www.youtube.com/results?search_query=${music[newAutoTitleString]}};
        #replace {music[links][longUrl]} { } {+};
        #replace {music[links][longUrl]} {&} {%%26};
        #script {i} {curl --connect-timeout 10 -s --data "signature=${music[links][apiKey]}" --data "action=shorturl" --data "format=text" --data-urlencode "url=${music[links][longUrl]}" ${music[links][apiUrl]}};
        #variable {music[links][shortUrl]} {${i[1]}};
        %2 Now playing: $msg via ${i[1]}. ${music[links][shortUrl]}
    }
}
{9}

#ALIAS {^{auto|noauto}title$}
{
    #if {{%0} == {autotitle}}
    {
        NOTIFY Your title will automatically change to currently playing song.;
        #variable {auto[title]} {1}
    };
    #else
    {
        NOTIFY Your title will no longer be automatically set.;
        #variable {auto[title]} {0}
    }
}
{9}

#ALIAS {^{musicc|musicch|musiccha|musicchan|musicchann|musicchanne|musicchannel} %s%S$}
{
    #variable {music[channel]} {%3};
    NOTIFY Music channel set to %3.;
    CSAVE
}
{9}

#ALIAS {^{nom|m}usiclinks$}
{
    #if {{%0} == {musiclinks}}
    {
        #variable {music[links][apiUrl]} {https://1u.rs/yourls-api.php};
        #variable {music[links][apiKey]} {b0dda9c182};
        NOTIFY music links enabled using ${music[links][apiUrl]}.
    };
    #else
    {
        #unvariable {music[links]};
        NOTIFY Music links disabled.
    };
    CSAVE
}
{9}

#ALIAS {mp{l|ly|lyr|lyri|lyric|lyrics} %2}
{
    #if {@check_music_player{} == 1}
    {
        #return #nop
    };
    Get_Music_Message_String;
    #script {scripts/lyrics.sh '%2' "${music[newAutoTitleString]}"}
}
{9}


#FUNCTION {check_music_player}
{
    #script {command -v playerctl &> /dev/null || echo "#echo {Please install playerctl.};#return 1"};
    #script {i} {playerctl -p %any,chromium status};
    #variable {i} {${i[1]}};
    #if {{$i} != {Playing}}
    {
        NOTIFY No detected music.;
        #return 1
    };
    #return 0
}


#MACRO {\e+}
{
    #nop {Increase music player volume};
    #system {playerctl -p %any,chromium volume 0.05+}
}

#MACRO {\eB}
{
    #nop {Music player next};
    #system {playerctl -p %any,chromium next};
    #nop {Currently playing track};
    Get_Music_Message_String;
    NOTIFY $msg.
}

#MACRO {\eC}
{
    #nop {Music player pause};
    #system {playerctl -p %any,chromium play-pause}
}

#MACRO {\eM}
{
    #if {!&{music[channel]}}
    {
        #variable {music[channel]} {music}
    };
    mpost ${music[channel]}
}

#MACRO {\eR}
{
    #nop {Music player repeat.};
    #script {i} {playerctl -p %any,chromium loop};
    #variable {i} {${i[1]}};
    #switch {{${i}}}
    {
        #case {{None}}
        {
            #system {playerctl -p %any,chromium loop playlist}
        };
        #case {{Playlist}}
        {
            #system {playerctl -p %any,chromium loop track}
        };
        #case {{Track}}
        {
            #system {playerctl -p %any,chromium loop none}
        }
    };
    #script {i} {playerctl -p %any,chromium loop 2>&1};
    #variable {i} {${i[1]}};
    NOTIFY Repeat $i.
}

#MACRO {\eS}
{
    #nop {Music player randomize tracks.};
    #system {playerctl -p %any,chromium shuffle toggle};
    #script {i} {playerctl -p %any,chromium shuffle 2>&1};
    #variable {i} {${i[1]}};
    NOTIFY Shuffle $i.
}

#MACRO {\eU}
{
    #nop {Currently playing track};
    Get_Music_Message_String;
    NOTIFY $msg.
}

#MACRO {\eV}
{
    #nop {Music player stop.};
    #system {playerctl -p %any,chromium stop}
}

#MACRO {\eX}
{
    #nop {Music player play.};
    #system {playerctl -p %any,chromium play};
    #nop {Currently playing track};
    Get_Music_Message_String;
    NOTIFY $msg.
}

#MACRO {\eZ}
{
    #nop {Music player previous track.};
    #system {playerctl -p %any,chromium previous};
    #nop {Currently playing track};
    Get_Music_Message_String;
    NOTIFY $msg.
}

#MACRO {\e_}
{
    #nop {Music player volume down.};
    #system {playerctl -p %any,chromium volume 0.05-}
}


#TICKER {autotitle} {SET_AUTOTITLE} {30}

#VARIABLE {msg} {}
#VARIABLE {settingTitle} {}

